extensionprops: {}
openapi: 3.0.0
components:
  extensionprops: {}
  schemas:
    CSR:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          common_name:
            ref: ""
            value:
              extensionprops: {}
              type: string
          country:
            ref: ""
            value:
              extensionprops: {}
              type: string
          csr:
            ref: ""
            value:
              extensionprops: {}
              type: string
          dms_name:
            ref: ""
            value:
              extensionprops: {}
              type: string
          id:
            ref: ""
            value:
              extensionprops: {}
              type: integer
          locality:
            ref: ""
            value:
              extensionprops: {}
              type: string
          mail:
            ref: ""
            value:
              extensionprops: {}
              type: string
          organization:
            ref: ""
            value:
              extensionprops: {}
              type: string
          organization_unit:
            ref: ""
            value:
              extensionprops: {}
              type: string
          state:
            ref: ""
            value:
              extensionprops: {}
              type: string
          status:
            ref: ""
            value:
              extensionprops: {}
              type: string
          url:
            ref: ""
            value:
              extensionprops: {}
              type: string
    CSRForm:
      ref: ""
      value:
        extensionprops: {}
        type: object
        properties:
          common_name:
            ref: ""
            value:
              extensionprops: {}
              type: string
          country:
            ref: ""
            value:
              extensionprops: {}
              type: string
          dms_name:
            ref: ""
            value:
              extensionprops: {}
              type: string
          key_bits:
            ref: ""
            value:
              extensionprops: {}
              type: integer
          key_type:
            ref: ""
            value:
              extensionprops: {}
              type: string
          locality:
            ref: ""
            value:
              extensionprops: {}
              type: string
          mail:
            ref: ""
            value:
              extensionprops: {}
              type: string
          organization:
            ref: ""
            value:
              extensionprops: {}
              type: string
          organization_unit:
            ref: ""
            value:
              extensionprops: {}
              type: string
          state:
            ref: ""
            value:
              extensionprops: {}
              type: string
          url:
            ref: ""
            value:
              extensionprops: {}
              type: string
  requestBodies:
    getPendingCSRRequest:
      ref: ""
      value:
        extensionprops: {}
        description: Request used for creating a new CSR Form
        required: true
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
                properties:
                  ID:
                    ref: ""
                    value:
                      extensionprops: {}
                      type: integer
    postCSRFormRequest:
      ref: ""
      value:
        extensionprops: {}
        description: Request used for creating a new CSR Form
        required: true
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
                properties:
                  subject:
                    ref: '#/components/schemas/CSRForm'
                    value: null
    postCSRRequest:
      ref: ""
      value:
        extensionprops: {}
        description: 'Request used for creating a new CSR '
        required: true
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
                properties:
                  data:
                    ref: ""
                    value:
                      extensionprops: {}
                      type: string
                  dms_name:
                    ref: ""
                    value:
                      extensionprops: {}
                      type: string
                  key_type:
                    ref: ""
                    value:
                      extensionprops: {}
                      type: string
  responses:
    DeleteCSRResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after deleting CSR.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
    ErrorResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response when errors happen.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
                properties:
                  error:
                    ref: ""
                    value:
                      extensionprops: {}
                      type: string
    GetCRTResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after deleting CSR.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
    GetPendingCSRDBResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after getting pending CSRDB.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: '#/components/schemas/CSR'
              value: null
    GetPendingCSRFileResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after getting CSR File.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
    GetPendingCSRsResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after getting pending CSRs.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
                properties:
                  CSRs:
                    ref: ""
                    value:
                      extensionprops: {}
                      type: array
                      items:
                        ref: '#/components/schemas/CSR'
                        value: null
    HealthResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after healthchecking.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
                properties:
                  healthy:
                    ref: ""
                    value:
                      extensionprops: {}
                      type: boolean
    PostCSRFormResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after creating a CSR.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: ""
              value:
                extensionprops: {}
                properties:
                  csr:
                    ref: '#/components/schemas/CSR'
                    value: null
                  priv_key:
                    ref: ""
                    value:
                      extensionprops: {}
                      type: string
    PostCSRResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after getting a CA.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: '#/components/schemas/CSR'
              value: null
    PutChangeCSRStatusResponse:
      ref: ""
      value:
        extensionprops: {}
        description: Response returned back after changing CSR Status.
        content:
          application/json:
            extensionprops: {}
            schema:
              ref: '#/components/schemas/CSR'
              value: null
info:
  extensionprops: {}
  title: Lamassu DMS Enroller API
  description: REST API used for interacting with Lamassu DMS Enroller
  contact:
    extensionprops: {}
    url: https://github.com/lamassuiot
  license:
    extensionprops: {}
    name: MPL v2.0
    url: https://github.com/lamassuiot/lamassu-compose/blob/main/LICENSE
  version: 0.0.0
paths:
  /v1/csrs:
    extensionprops: {}
    get:
      extensionprops: {}
      description: Get Pending CSRs
      operationId: GetPendingCSRs
      responses:
        "200":
          ref: '#/components/responses/GetPendingCSRsResponse'
          value: null
        "400":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "401":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "403":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "500":
          ref: '#/components/responses/ErrorResponse'
          value: null
  /v1/csrs/{id}:
    extensionprops: {}
    delete:
      extensionprops: {}
      description: Delete CSR by id
      operationId: DeleteCSR
      parameters:
      - ref: ""
        value:
          extensionprops: {}
          name: id
          in: path
          required: true
          schema:
            ref: ""
            value:
              extensionprops: {}
              type: integer
      responses:
        "200":
          ref: '#/components/responses/DeleteCSRResponse'
          value: null
        "400":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "401":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "403":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "500":
          ref: '#/components/responses/ErrorResponse'
          value: null
    get:
      extensionprops: {}
      description: Get Pending CSRDB by id
      operationId: GetPendingCSRDB
      parameters:
      - ref: ""
        value:
          extensionprops: {}
          name: id
          in: path
          required: true
          schema:
            ref: ""
            value:
              extensionprops: {}
              type: integer
      responses:
        "200":
          ref: '#/components/responses/GetPendingCSRDBResponse'
          value: null
        "400":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "401":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "403":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "500":
          ref: '#/components/responses/ErrorResponse'
          value: null
    put:
      extensionprops: {}
      description: Change CSR Status by id
      operationId: PutChangeCSRStatus
      parameters:
      - ref: ""
        value:
          extensionprops: {}
          name: id
          in: path
          required: true
          schema:
            ref: ""
            value:
              extensionprops: {}
              type: integer
      responses:
        "200":
          ref: '#/components/responses/PutChangeCSRStatusResponse'
          value: null
        "400":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "401":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "403":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "500":
          ref: '#/components/responses/ErrorResponse'
          value: null
  /v1/csrs/{id}/crt:
    extensionprops: {}
    get:
      extensionprops: {}
      description: Get CRT by id
      operationId: GetCRT
      parameters:
      - ref: ""
        value:
          extensionprops: {}
          name: id
          in: path
          required: true
          schema:
            ref: ""
            value:
              extensionprops: {}
              type: integer
      responses:
        "200":
          ref: '#/components/responses/GetCRTResponse'
          value: null
        "400":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "401":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "403":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "500":
          ref: '#/components/responses/ErrorResponse'
          value: null
  /v1/csrs/{id}/file:
    extensionprops: {}
    get:
      extensionprops: {}
      description: Get Pending CSR Fileby id
      operationId: GetPendingCSRFile
      parameters:
      - ref: ""
        value:
          extensionprops: {}
          name: id
          in: path
          required: true
          schema:
            ref: ""
            value:
              extensionprops: {}
              type: integer
      responses:
        "200":
          ref: '#/components/responses/GetPendingCSRFileResponse'
          value: null
        "400":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "401":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "403":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "500":
          ref: '#/components/responses/ErrorResponse'
          value: null
  /v1/csrs/{name}:
    extensionprops: {}
    post:
      extensionprops: {}
      description: Post CSR
      operationId: PostCSR
      parameters:
      - ref: ""
        value:
          extensionprops: {}
          name: name
          in: path
          required: true
          schema:
            ref: ""
            value:
              extensionprops: {}
              type: string
      requestBody:
        ref: '#/components/requestBodies/postCSRRequest'
        value: null
      responses:
        "200":
          ref: '#/components/responses/PostCSRResponse'
          value: null
        "400":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "401":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "403":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "500":
          ref: '#/components/responses/ErrorResponse'
          value: null
  /v1/csrs/{name}/form:
    extensionprops: {}
    post:
      extensionprops: {}
      description: Post CSR Form
      operationId: PostCSRForm
      parameters:
      - ref: ""
        value:
          extensionprops: {}
          name: name
          in: path
          required: true
          schema:
            ref: ""
            value:
              extensionprops: {}
              type: string
      requestBody:
        ref: '#/components/requestBodies/postCSRFormRequest'
        value: null
      responses:
        "200":
          ref: '#/components/responses/PostCSRFormResponse'
          value: null
        "400":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "401":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "403":
          ref: '#/components/responses/ErrorResponse'
          value: null
        "500":
          ref: '#/components/responses/ErrorResponse'
          value: null
  /v1/health:
    extensionprops: {}
    get:
      extensionprops: {}
      description: Get health status
      operationId: Health
      responses:
        "200":
          ref: '#/components/responses/HealthResponse'
          value: null
servers:
- extensionprops: {}
  url: /
  description: Current Server
